name: Build & Deploy (weekly)

on:
  schedule:
    - cron: '0 6 * * 1'
  workflow_dispatch: {}
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: "1"   # logs Python non bufferis√©s

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -c "import sys;print('python',sys.version)"; pip freeze | sed -n '1,80p'

      - name: Quick API reachability check
        run: |
          python - <<'PY'
          import requests
          headers={"User-Agent":"Mozilla/5.0","Accept":"application/json"}
          url="https://www.essecalumni.com/api/v2/public/agenda/occurrence/visitor/occurrence?language=auto&published=1&when=upcoming&properties[0]=group&limit=1"
          r=requests.get(url,headers=headers,timeout=30)
          print("ESSEC API status:",r.status_code,"len:",len(r.text))
          r.raise_for_status()
          PY

      - name: Run scraper (with traceback)
        run: |
          set -euxo pipefail
          python - <<'PY'
          import sys,traceback
          import multi_schools
          try:
              multi_schools.main()
              print("SCRAPER_DONE")
          except Exception as e:
              print("SCRAPER_FAILED")
              traceback.print_exc()
              sys.exit(1)
          PY
          echo "---- LIST output ----"; ls -lah output || true
          echo "---- HEAD events.json ----"; test -f output/events.json && head -c 400 output/events.json || true
          # Echoue si events.json n'existe pas
          test -f output/events.json

      - name: Prepare static site
        run: |
          mkdir -p public
          cp -r output/* public/
          echo "Public content:"; find public -maxdepth 1 -type f -printf "%f\n"

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
